{"version":3,"file":"MapboxLayer.js","sources":["../../src/components/MapboxLayer.vue"],"sourcesContent":["<template>\n  <div :id=\"id\" />\n</template>\n\n<script>\n  import { bindEvents, unbindEvents } from '../utils/bind-events';\n  import { injectMap } from '../mixins/provide-inject-map';\n\n  /**\n   * All Map events which will be mapped/bounded to the component\n   * @see  https://docs.mapbox.com/mapbox-gl-js/api/#map#on\n   * @type {Array}\n   */\n  const events = [\n    'mousedown',\n    'mouseup',\n    'click',\n    'dblclick',\n    'mousemove',\n    'mouseenter',\n    'mouseleave',\n    'mouseover',\n    'mouseout',\n    'contextmenu',\n    'touchstart',\n    'touchend',\n    'touchcancel',\n  ];\n\n  export default {\n    name: 'MapboxLayer',\n    mixins: [ injectMap() ],\n    props: {\n      /**\n       * Id of the layer\n       * @see  https://docs.mapbox.com/mapbox-gl-js/api/#map#addlayer\n       * @type {String}\n       */\n      id: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Options for the layer\n       * @see  https://docs.mapbox.com/mapbox-gl-js/api/#map#addlayer\n       * @see  https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers\n       * @type {Object}\n       */\n      options: {\n        type: Object,\n        default: () => {},\n      },\n      /**\n       * The ID of an existing layer to insert the new layer before.\n       * @see  https://docs.mapbox.com/mapbox-gl-js/api/#map#addlayer\n       * @type {String}\n       */\n      beforeId: {\n        type: String,\n        default: undefined,\n      },\n    },\n    mounted() {\n      // Make sure to remove any existing layer and/or source to avoid conflicts\n      if (this.layerExists()) {\n        this.map.removeLayer(this.id);\n      }\n\n      if (this.sourceExists()) {\n        this.map.removeSource(this.id);\n      }\n\n      // Bind events\n      bindEvents(this, this.map, events, this.id);\n\n      if (this.options.paint === null || this.options.paint === undefined) {\n        delete this.options.paint;\n      }\n\n      if (this.options.layout === null || this.options.layout === undefined) {\n        delete this.options.layout;\n      }\n\n      this.map.addLayer({ ...this.options, id: this.id }, this.beforeId);\n    },\n    destroyed() {\n      if (this.layerExists()) {\n        unbindEvents(this, this.map, this.id);\n        this.map.removeLayer(this.id);\n      }\n\n      if (this.sourceExists()) {\n        this.map.removeSource(this.id);\n      }\n    },\n    methods: {\n      /**\n       * Test if the component's layer exists\n       * @return {Boolean}\n       */\n      layerExists() {\n        return typeof this.map.getLayer(this.id) !== 'undefined';\n      },\n      /**\n       * Test if a source with the layer's ID exists\n       * @return {Boolean}\n       */\n      sourceExists() {\n        return typeof this.map.getSource(this.id) !== 'undefined';\n      },\n    },\n  };\n</script>\n"],"names":[],"mappings":";;;;;AAQA;AACA;AACA;AACA;AACA;;AACA,oLAAA;AAgBA;;;;;AAKA;AACA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;;;;;AAKA;AACA;AACA;;;;;CA7EA;;;AA3BA,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}